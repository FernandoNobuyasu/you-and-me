
<canvas class="rain-canvas" id="rain-canvas" class="fixed inset-0 z-0 pointer-events-none"></canvas>

<style>
  .rain-canvas{
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 0;
  }
</style>
<script>
    interface Raindrop {
        x: number;
        y: number;
        length: number;
        opacity: number;
        speed: number;
    }

    const canvas = document.getElementById('rain-canvas') as HTMLCanvasElement;
    const ctx = canvas.getContext('2d')!;
    let raindrops: Raindrop[] = [];
  
    function resizeCanvas() {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    }
  
    window.addEventListener('resize', resizeCanvas);
    resizeCanvas();
  
    for (let i = 0; i < 100; i++) {
      raindrops.push({
        x: Math.random() * canvas.width,
        y: Math.random() * canvas.height,
        length: Math.random() * 20 + 10,
        opacity: Math.random() * 0.2 + 0.05,
        speed: Math.random() * 3 + 2
      });
    }
  
    function drawRain() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';
      ctx.lineWidth = 1;
  
      raindrops.forEach(drop => {
        ctx.beginPath();
        ctx.moveTo(drop.x, drop.y);
        ctx.lineTo(drop.x, drop.y + drop.length);
        ctx.stroke();
        drop.y += drop.speed;
        if (drop.y > canvas.height) {
          drop.y = -drop.length;
          drop.x = Math.random() * canvas.width;
        }
      });
  
      requestAnimationFrame(drawRain);
    }
  
    drawRain();
  </script>